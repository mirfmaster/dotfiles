git:
  paging:
    colorArg: always
    pager: delta --line-numbers --dark --paging=never

services:
  "gitlab.zero-one-group.com": "gitlab:gitlab.zero-one-group.com"

os:
  editPreset: "nvim"
  open: "xdg-open {{filename}} >/dev/null"

gui:
  authorColors:
    "Muhamad Iqbal": "#4682B4"
  theme:
    selectedLineBgColor:
      - reverse

customCommands:
  - key: "<c-r>"
    context: "commits"
    command: 'hub browse -- "commit/{{.SelectedLocalCommit.Hash}}"'
  - key: "a"
    context: "files"
    command: "git {{if .SelectedFile.HasUnstagedChanges}} add {{else}} reset {{end}} {{.SelectedFile.Name | quote}}"
    description: "Toggle file staged"
  - key: "<C-f>"
    context: "global"
    command: "git fetch --all"
    loadingText: "Fetching all remotes"
  - key: "n"
    context: "localBranches"
    prompts:
      - type: "menu"
        title: "What kind of branch is it?"
        key: "BranchType"
        options:
          - name: "feature"
            description: "a feature branch"
            value: "feature"
          - name: "fix"
            description: "a fix branch"
            value: "fix"
          - name: "hotfix"
            description: "a hotfix branch"
            value: "hotfix"
          - name: "dev"
            description: "a playground branch"
            value: "dev"
      - type: "input"
        title: "What is the new branch name?"
        key: "BranchName"
        initialValue: ""
    command: >
      bash -c 'branch_type="{{.Form.BranchType}}"; branch_name="{{.Form.BranchName}}"; sanitized_branch_name=$(echo "$branch_name" | sed "s/ /-/g"); new_branch="${branch_type}/${sanitized_branch_name}"; git checkout -b "$new_branch"'
    loadingText: "Creating branch"
  # New command for commit with no-verify
  - key: "C"
    context: "files"
    prompts:
      - type: "input"
        title: "Enter commit message"
        key: "CommitMessage"
        initialValue: ""
    command: >
      git commit -m "{{.Form.CommitMessage}}" --no-verify
    loadingText: "Committing changes (no-verify)"
  # Updated command for other no-verify actions
  - key: "N"
    context: "global"
    prompts:
      - type: "menu"
        title: "Select a no-verify action"
        key: "NoVerifyAction"
        options:
          - name: "push"
            description: "Push changes (no-verify)"
            value: "push"
          - name: "push-force"
            description: "Push changes with force-lease (no-verify)"
            value: "push-force"
          - name: "amend"
            description: "Amend commit (no-verify, keep current message)"
            value: "amend"
    command: >
      bash -c '
      action="{{.Form.NoVerifyAction}}";
      case "$action" in
        "push")
          if git ls-remote --exit-code --heads origin $(git symbolic-ref --short HEAD) >/dev/null 2>&1; then
            git push --no-verify
          else
            git push -u origin HEAD --no-verify
          fi
          ;;
        "push-force")
          git push --force-with-lease --no-verify
          ;;
        "amend")
          git commit --amend --no-edit --no-verify
          ;;
      esac'
    loadingText: "Performing no-verify action"
