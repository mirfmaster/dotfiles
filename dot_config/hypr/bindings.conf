# Application bindings
$terminal = uwsm app -- alacritty
$browser = omarchy-launch-browser

bindd = SUPER, return, Terminal, exec, $terminal --working-directory=$(omarchy-cmd-terminal-cwd)
bindd = SUPER_ALT, E, File manager, exec, uwsm app -- nautilus --new-window
bindd = SUPER, E, File manager, exec, $terminal -e spf
bindd = SUPER, B, Browser, exec, $browser
bindd = SUPER, M, Music, exec, omarchy-launch-webapp "https://music.youtube.com/"
bindd = SUPER, N, Neovim, exec, $terminal -e nvim
bindd = SUPER, T, Activity, exec, $terminal -e btop
bindd = SUPER_SHIFT, T, Telegram Web, exec, omarchy-launch-webapp "https://web.telegram.org/a/"
bindd = SUPER, D, Docker, exec, $terminal -e lazydocker
# bindd = SUPER, G, Signal, exec, uwsm app -- signal-desktop
# bindd = SUPER, O, Obsidian, exec, uwsm app -- obsidian -disable-gpu
bindd = SUPER, slash, Passwords, exec, uwsm app -- 2password

# If your web app url contains #, type it as ## to prevent hyperland treat it as comments
bindd = SUPER, A, T4Chat, exec, omarchy-launch-webapp "https://t3.chat"
unbind = SUPER, P
bindd = SUPER, P, SuperProductivity, exec, omarchy-launch-webapp "https://app.super-productivity.com/"
# bindd = SUPER SHIFT, A, Grok, exec, omarchy-launch-webapp "https://grok.com"
# bindd = SUPER, C, Calendar, exec, omarchy-launch-webapp "https://app.hey.com/calendar/weeks/"
# bindd = SUPER, E, Email, exec, omarchy-launch-webapp "https://app.hey.com"
bindd = SUPER, Y, YouTube, exec, omarchy-launch-webapp "https://youtube.com/"
# bindd = SUPER SHIFT, G, WhatsApp, exec, omarchy-launch-webapp "https://web.whatsapp.com/"
# bindd = SUPER ALT, G, Google Messages, exec, omarchy-launch-webapp "https://messages.google.com/web/conversations"
# bindd = SUPER, X, X, exec, omarchy-launch-webapp "https://x.com/"
# bindd = SUPER SHIFT, X, X Post, exec, omarchy-launch-webapp "https://x.com/compose/post"

# Overwrite existing bindings, like putting Omarchy Menu on Super + Space
# unbind = SUPER, SPACE
# bindd = SUPER, SPACE, Omarchy menu, exec, omarchy-menu

#───────────────────────────────────────────────────────────────────────
#  CUSTOM KEYBINDINGS
#───────────────────────────────────────────────────────────────────────
#  Syntax quick-ref
#  bindd  = MOD, KEY, Description, dispatcher, arg
#  bindld = , KEY, Description, dispatcher, arg   (no mod, locked)
#  unbind = MOD, KEY   # remove Hyprland default
#───────────────────────────────────────────────────────────────────────

#--------------------------------------------------
#  App-launch slots (free the defaults first)
#--------------------------------------------------
unbind = SUPER, e      # old file-manager
unbind = SUPER, M      # old music
unbind = SUPER, G      # old group
unbind = SUPER, O      # old obsidian
unbind = SUPER_SHIFT, G
unbind = SUPER_SHIFT, SPACE

#--------------------------------------------------
#  Focus movement (Vim-style, horizontal + vertical)
#--------------------------------------------------
bindd = SUPER, H, Move focus left,  movefocus, l
unbind = SUPER, L
bindd = SUPER, L, Move focus right, movefocus, r
unbind = SUPER, K # Show keybindings
bindd = SUPER, K, Move focus up,    movefocus, u
bindd = SUPER, J, Move focus down,  movefocus, d

#--------------------------------------------------
#  Config & helpers
#--------------------------------------------------
bindd = SUPER_CTRL_ALT, R, Reload Hyprland config, exec, hyprctl reload && notify-send -a Hyprland -i dialog-information "Config reloaded" "Hyprland configuration has been refreshed."
bindd = SUPER_ALT, K, Show key bindings, exec, omarchy-menu-keybindings

#--------------------------------------------------
#  Window life-cycle
#--------------------------------------------------
bindd = SUPER_SHIFT, Q, Force close active window, killactive

#--------------------------------------------------
#  Workspace navigation (mouse scroll emulation)
#--------------------------------------------------
bindd = SUPER, mouse_down, Next workspace,     workspace, e+2
bindd = SUPER, mouse_up,   Previous workspace, workspace, e0

#--------------------------------------------------
#  Layout / tab-group
#--------------------------------------------------
#  Tab switching inside a group
unbind = SUPER, TAB
unbind = SUPER_SHIFT, TAB
bindd = SUPER, TAB,      Next tab,     changegroupactive, f
bindd = SUPER_SHIFT, TAB, Previous tab, changegroupactive, b

#  Group creation & window state
bindd = SUPER_ALT, T, Create tab-group,   togglegroup
bindd = SUPER_CTRL, F, Toggle floating,    togglefloating
bindd = SUPER_ALT, F, Toggle fullscreen,  fullscreen, 1
bindd = SUPER_ALT, P, Pseudo jindow, pseudo, # dwindle

